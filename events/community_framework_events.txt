##################################
# COMMUNITY MOD FRAMEWORK EVENTS #
##################################

# This file is here for error supression and event window testing. It has no other purpose. Do NOT call these events.

####################

namespace = community_framework_events

####################

community_framework_events.1 = { # Error supression
    type = country_event
    placement = root
    hidden = yes

	# DO NOT CALL THIS EVENT
	trigger = {
		always = no
	}
	
	cancellation_trigger = {
		always = yes
	}

	immediate = {
		set_variable = community_gui_objective_var
		set_variable = custom_button_list
		set_variable = had_progressive_era
		set_variable = custom_social_hieracy
		set_variable = com_journal_characters
		set_variable = com_opinion
		set_variable = com_gui_progressbar_var
		set_variable = ccp_land_revolution_ig
		add_to_global_variable_list = {
			name = com_custom_owner_buildings
			target = bt:building_manor_house
		}

		remove_variable = community_gui_objective_var
		remove_variable = custom_button_list
		remove_variable = had_progressive_era
		remove_variable = custom_social_hieracy
		remove_variable = com_journal_characters
		remove_variable = com_opinion
		remove_variable = com_gui_progressbar_var
		remove_variable = ccp_land_revolution_ig
		clear_global_variable_list = com_custom_owner_buildings
	}
	
	orphan = yes
	
}

community_framework_events.2 = { # GUI window testing
	type = country_event
	placement = root
	
	title = community_framework_events.2.t
	desc = community_framework_events.2.d
	flavor = community_framework_events.2.f
	
	left_icon = scope:left_icon
	
	gui_window = event_window_struggle
	
	event_image = {
		video = "unspecific_contract_signed"
	}
	
	icon = "gfx/interface/icons/event_icons/event_default.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	trigger = {
		# Testing only
	}
	
	immediate = {
	}
	
	option = {
		name = community_framework_events.2.a
		default_option = yes
	}
	
	option = {
		name = community_framework_events.2.b
	}
	
	option = {
		name = community_framework_events.2.c
	}
	
	option = {
		name = community_framework_events.2.e
	}
	
	orphan = yes

}

community_framework_events.3 = { # GUI window testing
	type = country_event
	placement = root
	
	title = community_framework_events.2.t
	desc = community_framework_events.2.d
	flavor = community_framework_events.2.f
	
	left_icon = scope:left_icon
	right_icon = scope:right_icon
	
	gui_window = event_window_struggle
	
	event_image = {
		video = "event_window_highlander"
	}
	
	icon = "gfx/interface/icons/event_icons/event_default.dds"
	
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	
	duration = 3
	
	trigger = {
		# Testing only
	}
	
	immediate = {
		ruler = {
			save_scope_as = left_icon
		}
		ruler = {
			save_scope_as = right_icon
		}
	}
	
	option = {
		name = community_framework_events.2.a
		default_option = yes
	}
	
	option = {
		name = community_framework_events.2.b
	}
	
	option = {
		name = community_framework_events.2.c
	}
	
#	option = {
#		name = community_framework_events.2.e
#	}
	
	orphan = yes

}