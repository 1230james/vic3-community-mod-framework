# By Chris Kaiser | Bahmut

# Heavily modified from original implementation
# by LordR & Alexedishi

vbox = {
	name = "com_gui_sidebar"
	parentanchor = bottom|left
	max_update_rate = 8
	
	layoutpolicy_vertical = expanding
	margin_bottom = 50
	spacing = 0
	max_width = 50
    margin_left = -25
	
	# Are there registered custom buttons?
	# And is the pause menu shown?
	# Are we in observer mode?
	visible = "[And6( 
		GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 
		Not(IsObserver), 
		Not(IsDataModelEmpty(GetGlobalList('custom_button_list'))),
		IsInGame, 
		Not(IsPauseMenuShown),
		Not(IsGameOverScreenShown)
	)]"

    # Close custom panels when a base game panel is opened
    # Same behavior as base game
    state = {
        trigger_when = "[InformationPanelBar.IsAnyPanelOpen]"
        on_finish = "[GetVariableSystem.Clear('com_open_window')]"
    }

	expand = {}

	widget = {
		size = { 50 50 }
		icon = {
			using = hud_shiny_effect
			size = { 50 50 }
			framesize = { 100 100 }
			frame = 0

			position = { -75 77 }

			texture = "gfx/interface/main_hud/sidebar_skin_bg_1.dds"
		}
	}

	vbox = {
		# Add lower sidebar end
		# Produces error: Widget cannot have a position in a layout
		# Error comes from: parentanchor = bottom
		# But the parentanchor works and is needed so it is at the end of the button list
		widget = {
			size = { 50 50 }
			parentanchor = bottom

			icon = {
				using = hud_shiny_effect
				size = { 50 50 }
				framesize = { 100 100 }
				frame = 0

				position = { -75 23 }

				mirror = vertical

				texture = "gfx/interface/main_hud/sidebar_skin_bg_1.dds"

			}
		}

		# For each registered button
		vbox = {
			datamodel = "[GetGlobalList('custom_button_list')]" # Get registered custom buttons
            onmousehierarchyenter = "[PdxGuiInterruptThenTriggerAllAnimations('hide_custom_sidebar_labels','show_custom_sidebar_labels')]"
            onmousehierarchyleave = "[PdxGuiInterruptThenTriggerAllAnimations('show_custom_sidebar_labels','hide_custom_sidebar_labels')]"

			item = {
				container = {
					datacontext = "[GetScriptedGui(Scope.GetIdeology.GetNameNoFormatting)]"
                    enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                    icon = {
                        texture = "gfx/interface/main_hud/sidebar_skin_bg_2.dds"
                        parentanchor = center
                        size = { 50 50 }
                        position = { -75 0 }
                        using = hud_shiny_effect
                    }

                    margin_widget = {
                        margin_left = 40
                        enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                        alpha = 0
                        size = { 250 50 }

                        using = sidepanel_label_background

                        button = {
                            onclick = "[GetVariableSystem.Set('com_open_window', Scope.GetIdeology.GetNameNoFormatting)]"
                            onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
                            size = { 100% 100% }
                            using = glow_button
                            parentanchor = vcenter
                        }

                        state = {
                            name = show_custom_sidebar_labels
                            alpha = 1
                            duration = 0.15
                            using = Animation_Curve_Default
                        }
                        state = {
                            name = hide_custom_sidebar_labels
                            alpha = 0
                            duration = 0.15
                            using = Animation_Curve_Default
                        }

                        textbox = {
                            margin_left = 50
                            size = { -1 50 }

                            align = left
                            default_format "#bold"
                            raw_text = "[Scope.GetIdeology.GetDesc]"
                        }
                    }

                    button_icon_round = {
                        name = "[Scope.GetIdeology.GetNameNoFormatting]"

                        parentanchor = center
                        size = { 47 47 }
                        position = { -75 0 }

                        enabled = "[ScriptedGui.IsValid(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"

                        onclick = "[GetVariableSystem.Set('com_open_window', Scope.GetIdeology.GetNameNoFormatting)]"
                        onclick = "[ScriptedGui.Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"


                        blockoverride "icon" {
                            texture = "[Scope.GetIdeology.GetTexture]"
                        }

                        blockoverride "icon_size" {
                            size = { 35 35 }
                        }

                        state = {
                            name = _mouse_enter
                            alpha = 1
                            duration = 0.7
                            using = Animation_Curve_Default
                        }
                        state = {
                            name = _mouse_leave
                            alpha = 0.7
                            duration = 0.2
                            using = Animation_Curve_Default
                        }
                    }

                    sidebar_tooltip_area = {
                        # Only show tooltip when there is one defined
                        visible = "[Not(ObjectsEqual(Localize(Concatenate(Scope.GetIdeology.GetNameNoFormatting, '_tooltip')), Concatenate(Scope.GetIdeology.GetNameNoFormatting, '_tooltip')))]"
                        tooltip = "[Localize(Concatenate(Scope.GetIdeology.GetNameNoFormatting, '_tooltip'))]"
                    }

				}
			}
		}
	}
	
}